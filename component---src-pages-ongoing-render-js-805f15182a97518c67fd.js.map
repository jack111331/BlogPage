{"version":3,"file":"component---src-pages-ongoing-render-js-805f15182a97518c67fd.js","mappings":"2HAiBA,IAdYA,IAAgB,IAAf,MAAEC,GAAOD,EAClB,MAAME,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OAAOC,EAAAA,cAAA,aAAQH,EAAM,MAAIC,EAAKG,KAAKC,aAAaL,MAAc,C,gICZlE,MAAMM,GAAcC,EAAAA,EAAAA,OAAK,IAAM,iFAoB/B,MAlBkBC,KAAO,IAADC,EAAAC,EACtB,MAAM,EAACC,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,WAAS,GAM3C,OAJAC,EAAAA,EAAAA,YAAU,KACRF,GAAa,EAAK,GACjB,IAGDT,EAAAA,cAAAA,EAAAA,SAAA,MACIQ,GAAsB,QAAbF,EAAIM,iBAAS,IAAAN,GAAY,QAAZC,EAATD,EAAWO,kBAAU,IAAAN,GAArBA,EAAuBO,WAAaC,WAAW,sBAAsBC,QAAU,KAC5FhB,EAAAA,cAACiB,EAAAA,SAAQ,CAACC,SAAU,MAClBlB,EAAAA,cAACG,EAAW,OAGf,EC6KP,MAbkBgB,IAEdnB,EAAAA,cAAA,YACEA,EAAAA,cAACoB,EAAAA,EAAM,KAAC,UAGNpB,EAAAA,cAAA,OAAKqB,UAAU,wDACbrB,EAAAA,cAACK,EAAS,QAQb,MAAMiB,EAAOA,IAAMtB,EAAAA,cAACuB,EAAAA,EAAG,CAAC1B,MAAM,gB,+EC/L1B2B,EAAc,sCC0BzB,MAxBgBC,GAERzB,EAAAA,cAAA,OAAKqB,UDFO,gCCGRrB,EAAAA,cAAA,OAAKqB,UDNM,mCCOPrB,EAAAA,cAAA,MAAIqB,UDLE,mCCMFrB,EAAAA,cAAC0B,EAAAA,GAAI,CAACC,GAAG,IAAIN,UAAWG,GAAa,QAKrCxB,EAAAA,cAAC0B,EAAAA,GAAI,CAACC,GAAG,kBAAkBN,UAAWG,GAAa,kBAEnDxB,EAAAA,cAAC0B,EAAAA,GAAI,CAACC,GAAG,QAAQN,UAAWG,GAAa,QAEzCxB,EAAAA,cAAA,KAAG4B,KAAK,cAAcP,UAAWG,EAAaK,OAAO,SAASC,IAAI,uBAAsB,wB","sources":["webpack://blogs/./src/components/seo.js","webpack://blogs/./src/components/three-lazy.js","webpack://blogs/./src/pages/ongoing_render.js","webpack://blogs/./src/components/styles/navbar.module.css","webpack://blogs/./src/components/navbar.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    return <title>{title} | {data.site.siteMetadata.title}</title>\n}\n\nexport default Seo","import React, { useState, useEffect, Suspense, lazy } from 'react';\n\nconst ThreeCanvas = lazy(() => import('./three-canvas'));\n\nconst ThreeLazy = () => {\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  return (\n    <>\n      {!isMounted || navigator?.connection?.saveData || !matchMedia('(min-width: 768px)').matches ? null : (\n        <Suspense fallback={null}>\n          <ThreeCanvas />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nexport default ThreeLazy;","import * as React from \"react\"\nimport Navbar from \"../components/navbar\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Seo from \"../components/seo\"\nimport \"../../styles.css\"\n\nimport ThreeLazy from '../components/three-lazy';\n// const pageStyles = {\n//   color: \"#232129\",\n//   padding: 96,\n//   fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n// }\n// const headingStyles = {\n//   marginTop: 0,\n//   marginBottom: 64,\n//   maxWidth: 320,\n// }\n// const headingAccentStyles = {\n//   color: \"#663399\",\n// }\n// const paragraphStyles = {\n//   marginBottom: 48,\n// }\n// const codeStyles = {\n//   color: \"#8A6534\",\n//   padding: 4,\n//   backgroundColor: \"#FFF4DB\",\n//   fontSize: \"1.25rem\",\n//   borderRadius: 4,\n// }\n// const listStyles = {\n//   marginBottom: 96,\n//   paddingLeft: 0,\n// }\n// const listItemStyles = {\n//   fontWeight: 300,\n//   fontSize: 24,\n//   maxWidth: 560,\n//   marginBottom: 30,\n// }\n\n// const linkStyle = {\n//   color: \"#8954A8\",\n//   fontWeight: \"bold\",\n//   fontSize: 16,\n//   verticalAlign: \"5%\",\n// }\n\n// const docLinkStyle = {\n//   ...linkStyle,\n//   listStyleType: \"none\",\n//   marginBottom: 24,\n// }\n\n// const descriptionStyle = {\n//   color: \"#232129\",\n//   fontSize: 14,\n//   marginTop: 10,\n//   marginBottom: 0,\n//   lineHeight: 1.25,\n// }\n\n// const docLink = {\n//   text: \"Documentation\",\n//   url: \"https://www.gatsbyjs.com/docs/\",\n//   color: \"#8954A8\",\n// }\n\n// const badgeStyle = {\n//   color: \"#fff\",\n//   backgroundColor: \"#088413\",\n//   border: \"1px solid #088413\",\n//   fontSize: 11,\n//   fontWeight: \"bold\",\n//   letterSpacing: 1,\n//   borderRadius: 4,\n//   padding: \"4px 6px\",\n//   display: \"inline-block\",\n//   position: \"relative\",\n//   top: -2,\n//   marginLeft: 10,\n//   lineHeight: 1,\n// }\n\n// const links = [\n//   {\n//     text: \"Tutorial\",\n//     url: \"https://www.gatsbyjs.com/docs/tutorial/getting-started/\",\n//     description:\n//       \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n//     color: \"#E95800\",\n//   },\n//   {\n//     text: \"How to Guides\",\n//     url: \"https://www.gatsbyjs.com/docs/how-to/\",\n//     description:\n//       \"Practical step-by-step guides to help you achieve a specific goal. Most useful when you're trying to get something done.\",\n//     color: \"#1099A8\",\n//   },\n//   {\n//     text: \"Reference Guides\",\n//     url: \"https://www.gatsbyjs.com/docs/reference/\",\n//     description:\n//       \"Nitty-gritty technical descriptions of how Gatsby works. Most useful when you need detailed information about Gatsby's APIs.\",\n//     color: \"#BC027F\",\n//   },\n//   {\n//     text: \"Conceptual Guides\",\n//     url: \"https://www.gatsbyjs.com/docs/conceptual/\",\n//     description:\n//       \"Big-picture explanations of higher-level Gatsby concepts. Most useful for building understanding of a particular topic.\",\n//     color: \"#0D96F2\",\n//   },\n//   {\n//     text: \"Plugin Library\",\n//     url: \"https://www.gatsbyjs.com/plugins\",\n//     description:\n//       \"Add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\n//     color: \"#8EB814\",\n//   },\n//   {\n//     text: \"Build and Host\",\n//     url: \"https://www.gatsbyjs.com/cloud\",\n//     badge: true,\n//     description:\n//       \"Now youâ€™re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\n//     color: \"#663399\",\n//   },\n// ]\n\n// const IndexPage = () => {\n//   return (\n//     <main style={pageStyles}>\n//       <h1 style={headingStyles}>\n//         Congratulations\n//         <br />\n//         <span style={headingAccentStyles}>â€” you just made a Gatsby site! ðŸŽ‰ðŸŽ‰ðŸŽ‰</span>\n//       </h1>\n//       <p style={paragraphStyles}>\n//         Edit <code style={codeStyles}>src/pages/index.js</code> to see this page\n//         update in real-time. ðŸ˜Ž\n//       </p>\n//       <ul style={listStyles}>\n//         <li style={docLinkStyle}>\n//           <a\n//             style={linkStyle}\n//             href={`${docLink.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter`}\n//           >\n//             {docLink.text}\n//           </a>\n//         </li>\n//         {links.map(link => (\n//           <li key={link.url} style={{ ...listItemStyles, color: link.color }}>\n//             <span>\n//               <a\n//                 style={linkStyle}\n//                 href={`${link.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter`}\n//               >\n//                 {link.text}\n//               </a>\n//               {link.badge && (\n//                 <span style={badgeStyle} aria-label=\"New Badge\">\n//                   NEW!\n//                 </span>\n//               )}\n//               <p style={descriptionStyle}>{link.description}</p>\n//             </span>\n//           </li>\n//         ))}\n//       </ul>\n//       <img\n//         alt=\"Gatsby G Logo\"\n//         src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\"\n//       />\n//     </main>\n//   )\n// }\n\nconst IndexPage = () => {\n  return (\n    <main>\n      <Navbar>Navbar</Navbar>\n      {/* <StaticImage alt=\"Clifford, a reddish-brown pitbull, posing on a couch and looking stoically at the camera\" */}\n        {/* src=\"https://pbs.twimg.com/media/E1oMV3QVgAIr1NT?format=jpg&name=large\" /> */}\n        <div className=\"bg-brand-background top-0 left-0 w-full h-[94vh] z-0\">\n          <ThreeLazy />\n        </div>        \n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head = () => <Seo title=\"Jian-Kai Zhu\" />","// extracted by mini-css-extract-plugin\nexport var container = \"navbar-module--container--3089d\";\nexport var navLinkItem = \"navbar-module--nav-link-item--08ec8\";\nexport var navLinks = \"navbar-module--nav-links--79b0c\";\nexport var navbar = \"navbar-module--navbar--fb12b\";\nexport var title = \"navbar-module--title--7ede7\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { title, navbar, container, navLinks, navLinkItem } from \"./styles/navbar.module.css\"\n\nconst Navbar = (prop) => {\n    return (\n        <div className={navbar}>\n            <div className={container}>\n                <ul className={navLinks}>\n                    <Link to='/' className={navLinkItem}>Home</Link>\n\n                    {/* <Link to='/portfolio' className={navLinkItem}>Portfolio</Link>\n\n                    <Link to='/publication' className={navLinkItem}>Publication</Link> */}\n                    <Link to='/ongoing_render' className={navLinkItem}>Render testbed</Link>\n\n                    <Link to='/blog' className={navLinkItem}>Blog</Link>\n\n                    <a href='./anonymous' className={navLinkItem} target=\"_blank\" rel=\"noopener noreferrer\">Submission webpage</a>\n\n                </ul>\n            </div>\n\n        </div>\n    )\n}\n\n// export default IndexPage\nexport default Navbar"],"names":["_ref","title","data","useStaticQuery","React","site","siteMetadata","ThreeCanvas","lazy","ThreeLazy","_navigator","_navigator$connection","isMounted","setIsMounted","useState","useEffect","navigator","connection","saveData","matchMedia","matches","Suspense","fallback","IndexPage","Navbar","className","Head","Seo","navLinkItem","prop","Link","to","href","target","rel"],"sourceRoot":""}